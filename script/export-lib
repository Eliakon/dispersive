#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const mkdirp = require('mkdirp');
const dispersiveModules = require('dispersive-core/modules');
const dispersiveCorePath = path.dirname(require.resolve('dispersive-core'));
const babel = require('babel-core');

const dispersivePath = path.dirname(__dirname);

const options = {
  'presets': [
    'es2017',
    'es2016',
    'es2015',
  ],
  'plugins': [
    'transform-es3-member-expression-literals',
    'transform-es3-property-literals',
    ['transform-runtime', {
      'polyfill': false,
      'regenerator': true
    }]
  ]
};

const buildCoreModule = coreModule => {
  const coreModulePath = require.resolve(coreModule);
  const relativePath = path.relative(dispersiveCorePath, coreModulePath);
  const userModulePath = path.join(dispersivePath, relativePath);
  const {code} = babel.transformFileSync(coreModulePath, options);

  mkdirp.sync(path.dirname(userModulePath));
  fs.writeFileSync(userModulePath, code, 'utf-8');
};

const buildModules = modules => Object.keys(modules).forEach(
  name => {
    const subModule = modules[name];

    if (typeof subModule === 'object') {
      buildModules(subModule);
    } else {
      buildCoreModule(subModule);
    }
  }
);

buildModules(dispersiveModules);
buildCoreModule(require.resolve('dispersive-core/modules'));
buildCoreModule(require.resolve('dispersive-core/index'));
